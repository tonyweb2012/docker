### Monitoring cmds

# list networks
docker network ls

# show containers running or not by docker-compose
docker-compose ps

docker ps

docker images -a

# You can specify the maximum amount of times Docker will try to restart the container when using the on-failure policy. The default is that Docker will try forever to restart the container. The number of (attempted) restarts for a container can be obtained via docker inspect. For example, to get the number of restarts for container “my-container”;

  $ docker inspect -f "{{ .RestartCount }}" my-container
  # 2

# Or, to get the last time the container was (re)started;

  $ docker inspect -f "{{ .State.StartedAt }}" my-container
  # 2015-03-04T23:47:07.691840179Z

### Runtime cmds

# open a shell inside a container
docker exec -it <container> /bin/sh

### Deletion cmds
Ces commandes permettent de supprimer vos conteneurs et vos images. Vous en aurez probablement besoin pour libérer de l’espace disque.

docker rm <ID>/<NAME>

# clean up: remove stopped containers, unused networks, dangling images/build cache
docker system prune

docker-compose rm

# Le docker rm supprime seulement un conteneur alors que docker-compose rm supprime tous les conteneurs démarrés avec une commande docker-compose.

docker rmi <ID>/<NAME>

# Docker rmi supprime l’image que vous passez en paramètre et récursivement toutes les images intermédiaires utilisées pour la construire.

### Logs cmds
# read logs of a container: https://docs.docker.com/engine/reference/commandline/logs/
docker logs [--follow|--timestamps|--details|--since|(--tail|-n)|--until] <container>

+
Les commandes suivantes sont utiles quand vous devez débugger certains de vos conteneurs (ou, plus souvent, l'application que vous déployez à l’intérieur).

docker logs <ID>/<NAME> (-f --tail <NBLINE>)

Cette commande affiche les logs du container passé en paramètre. Si vous utilisez l’option -f --tail <NBLINE> vous pouvez suivre en live le flux de vos logs (<NBLINE> est le nombre de lignes que vous souhaitez afficher). Gardez à l’esprit de choisir un nombre de lignes que vous serez capable de gérer, pour ne pas être dépassé par vos logs.

docker-compose logs (<ID>/<NAME>)

L’option (<ID>/<NAME>) avec docker-compose logs vous permet de voir les logs d’un conteneur uniquement, au lieu de voir tous les logs. L’astuce ici est que si vous n’utilisez pas l’option -d quand vous utilisez docker run ou docker-compose up vous verrez vos logs directement (mais vous aurez besoin d’arrêter le conteneur pour quitter la vue). Cela peut toujours être utile pour débugger des applications au démarrage.
+

# In order to copy a file from a container to the host, you can use the command

docker ps # to get the container name
docker cp <containerId>:/file/path/within/container /host/path/target

################
# Useful links #
https://www.padok.fr/blog/docker-docker-compose-commandes-connaitre
https://docs.docker.com/engine/reference/commandline/exec/

# flaviostutz/docker-janitor : This containers performs continuous cleanups on unused Docker resources on the host. 
https://hub.docker.com/r/flaviostutz/docker-janitor
